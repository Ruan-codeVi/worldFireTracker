{"ast":null,"code":"var _jsxFileName = \"/home/juan/Documentos/Front-End_Projetos-React.js/incendios-tracker/src/components/Map.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport LocationMarker from './locationMarker';\nimport LocationInfoBox from './locationInfoBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Map = ({\n  eventData,\n  center,\n  zoom\n}) => {\n  _s();\n\n  const [locationInfo, setLocationInfo] = useState(null);\n  const markers = eventData.map(ev => {\n    if (ev.categories[0].id === 8) {\n      return /*#__PURE__*/_jsxDEV(LocationMarker, {\n        lat: ev.geometries[0].coordinates[1],\n        lng: ev.geometries[0].coordinates[0],\n        onClick: () => setLocationInfo({\n          id: ev.id,\n          title: ev.title\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 20\n      }, this);\n    }\n\n    return null;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMapReact, {\n      bootstrapURLKeys: {\n        key: 'AIzaSyCWBxlNpEtAk1yi9lgZ5WeW89b5pdva0Ek'\n      },\n      defaultCenter: center,\n      defaultZoom: zoom,\n      children: markers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), locationInfo && /*#__PURE__*/_jsxDEV(LocationInfoBox, {\n      info: locationInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"12TQ7nOZavxYGEoGTr51i7Gzxxc=\");\n\n_c = Map;\nMap.defaultProps = {\n  center: {\n    lat: -23.561684,\n    lng: -46.625378\n  },\n  zoom: 2\n};\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/juan/Documentos/Front-End_Projetos-React.js/incendios-tracker/src/components/Map.js"],"names":["useState","GoogleMapReact","LocationMarker","LocationInfoBox","Map","eventData","center","zoom","locationInfo","setLocationInfo","markers","map","ev","categories","id","geometries","coordinates","title","key","defaultProps","lat","lng"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,MAAMC,GAAG,GAAG,CAAE;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,MAAb;AAAqBC,EAAAA;AAArB,CAAF,KAAmC;AAAA;;AAC3C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEA,QAAMU,OAAO,GAAGL,SAAS,CAACM,GAAV,CAAeC,EAAE,IAAI;AACjC,QAAIA,EAAE,CAACC,UAAH,CAAc,CAAd,EAAiBC,EAAjB,KAAwB,CAA5B,EAA+B;AAC3B,0BAAO,QAAC,cAAD;AAAgB,QAAA,GAAG,EAAEF,EAAE,CAACG,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CAArB;AACH,QAAA,GAAG,EAAEJ,EAAE,CAACG,UAAH,CAAc,CAAd,EAAiBC,WAAjB,CAA6B,CAA7B,CADF;AAEH,QAAA,OAAO,EAAE,MAAMP,eAAe,CAAE;AAAEK,UAAAA,EAAE,EAACF,EAAE,CAACE,EAAR;AAAYG,UAAAA,KAAK,EAAEL,EAAE,CAACK;AAAtB,SAAF;AAF3B;AAAA;AAAA;AAAA;AAAA,cAAP;AAGH;;AACD,WAAO,IAAP;AACL,GAPiB,CAAhB;AASA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI,QAAC,cAAD;AACA,MAAA,gBAAgB,EAAE;AAACC,QAAAA,GAAG,EAAC;AAAL,OADlB;AAEA,MAAA,aAAa,EAAEZ,MAFf;AAGA,MAAA,WAAW,EAAEC,IAHb;AAAA,gBAKKG;AALL;AAAA;AAAA;AAAA;AAAA,YADJ,EAQKF,YAAY,iBAAI,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,YARrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAxBD;;GAAMJ,G;;KAAAA,G;AAyBNA,GAAG,CAACe,YAAJ,GAAmB;AACfb,EAAAA,MAAM,EAAE;AACJc,IAAAA,GAAG,EAAE,CAAC,SADF;AAEJC,IAAAA,GAAG,EAAE,CAAC;AAFF,GADO;AAKfd,EAAAA,IAAI,EAAE;AALS,CAAnB;AAUA,eAAeH,GAAf","sourcesContent":["import {useState} from 'react'\nimport GoogleMapReact from 'google-map-react'\nimport LocationMarker from './locationMarker'\nimport LocationInfoBox from './locationInfoBox'\n\n\nconst Map = ( { eventData, center, zoom } ) => {\n    const [locationInfo, setLocationInfo] = useState(null)\n\n    const markers = eventData.map( ev => {\n        if (ev.categories[0].id === 8) {\n            return <LocationMarker lat={ev.geometries[0].coordinates[1]}\n                lng={ev.geometries[0].coordinates[0]}\n                onClick={() => setLocationInfo( { id:ev.id, title: ev.title } )} />\n        }\n        return null\n  })  \n\n    return (\n        <div className='map'>\n            <GoogleMapReact\n            bootstrapURLKeys={{key:'AIzaSyCWBxlNpEtAk1yi9lgZ5WeW89b5pdva0Ek'}}\n            defaultCenter={center}\n            defaultZoom={zoom}\n            >\n                {markers}\n            </GoogleMapReact>\n            {locationInfo && <LocationInfoBox info={locationInfo }/>}\n        </div>\n    )\n}\nMap.defaultProps = {\n    center: {\n        lat: -23.561684,\n        lng: -46.625378,\n    },\n    zoom: 2\n        \n    \n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}